// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pbs/dispatch.proto

/*
Package protos is a generated protocol buffer package.

It is generated from these files:
	pbs/dispatch.proto
	pbs/file.proto

It has these top-level messages:
	DispatchRequest
	FileUploadRequest
	FileUploadResponse
*/
package protos

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type DispatchRequest struct {
	Action  string             `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	Content *FileUploadRequest `protobuf:"bytes,2,opt,name=content" json:"content,omitempty"`
}

func (m *DispatchRequest) Reset()                    { *m = DispatchRequest{} }
func (m *DispatchRequest) String() string            { return proto.CompactTextString(m) }
func (*DispatchRequest) ProtoMessage()               {}
func (*DispatchRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *DispatchRequest) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *DispatchRequest) GetContent() *FileUploadRequest {
	if m != nil {
		return m.Content
	}
	return nil
}

func init() {
	proto.RegisterType((*DispatchRequest)(nil), "protos.DispatchRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Dispatch service

type DispatchClient interface {
	DispatchJobs(ctx context.Context, in *DispatchRequest, opts ...grpc.CallOption) (*FileUploadResponse, error)
}

type dispatchClient struct {
	cc *grpc.ClientConn
}

func NewDispatchClient(cc *grpc.ClientConn) DispatchClient {
	return &dispatchClient{cc}
}

func (c *dispatchClient) DispatchJobs(ctx context.Context, in *DispatchRequest, opts ...grpc.CallOption) (*FileUploadResponse, error) {
	out := new(FileUploadResponse)
	err := grpc.Invoke(ctx, "/protos.Dispatch/DispatchJobs", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Dispatch service

type DispatchServer interface {
	DispatchJobs(context.Context, *DispatchRequest) (*FileUploadResponse, error)
}

func RegisterDispatchServer(s *grpc.Server, srv DispatchServer) {
	s.RegisterService(&_Dispatch_serviceDesc, srv)
}

func _Dispatch_DispatchJobs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DispatchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DispatchServer).DispatchJobs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.Dispatch/DispatchJobs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DispatchServer).DispatchJobs(ctx, req.(*DispatchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Dispatch_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protos.Dispatch",
	HandlerType: (*DispatchServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DispatchJobs",
			Handler:    _Dispatch_DispatchJobs_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pbs/dispatch.proto",
}

func init() { proto.RegisterFile("pbs/dispatch.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 168 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0x12, 0x2a, 0x48, 0x2a, 0xd6,
	0x4f, 0xc9, 0x2c, 0x2e, 0x48, 0x2c, 0x49, 0xce, 0xd0, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62,
	0x03, 0x53, 0xc5, 0x52, 0x7c, 0x20, 0xb9, 0xb4, 0xcc, 0x9c, 0x54, 0x88, 0xb8, 0x52, 0x1c, 0x17,
	0xbf, 0x0b, 0x54, 0x65, 0x50, 0x6a, 0x61, 0x69, 0x6a, 0x71, 0x89, 0x90, 0x18, 0x17, 0x5b, 0x62,
	0x72, 0x49, 0x66, 0x7e, 0x9e, 0x04, 0xa3, 0x02, 0xa3, 0x06, 0x67, 0x10, 0x94, 0x27, 0x64, 0xcc,
	0xc5, 0x9e, 0x9c, 0x9f, 0x57, 0x92, 0x9a, 0x57, 0x22, 0xc1, 0xa4, 0xc0, 0xa8, 0xc1, 0x6d, 0x24,
	0x09, 0x31, 0xa3, 0x58, 0xcf, 0x2d, 0x33, 0x27, 0x35, 0xb4, 0x20, 0x27, 0x3f, 0x31, 0x05, 0x6a,
	0x46, 0x10, 0x4c, 0xa5, 0x51, 0x20, 0x17, 0x07, 0xcc, 0x7c, 0x21, 0x57, 0x2e, 0x1e, 0x18, 0xdb,
	0x2b, 0x3f, 0xa9, 0x58, 0x48, 0x1c, 0xa6, 0x1f, 0xcd, 0x05, 0x52, 0x52, 0xd8, 0x0c, 0x2e, 0x2e,
	0xc8, 0xcf, 0x2b, 0x4e, 0x55, 0x62, 0x48, 0x82, 0x78, 0xc5, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff,
	0xed, 0x59, 0x55, 0x96, 0xe7, 0x00, 0x00, 0x00,
}
