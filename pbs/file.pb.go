// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pbs/file.proto

package protos

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type FileUploadRequest struct {
	Name    string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Content string `protobuf:"bytes,2,opt,name=content" json:"content,omitempty"`
}

func (m *FileUploadRequest) Reset()                    { *m = FileUploadRequest{} }
func (m *FileUploadRequest) String() string            { return proto.CompactTextString(m) }
func (*FileUploadRequest) ProtoMessage()               {}
func (*FileUploadRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *FileUploadRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *FileUploadRequest) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

type FileUploadResponse struct {
	Status  bool   `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	File    string `protobuf:"bytes,3,opt,name=file" json:"file,omitempty"`
}

func (m *FileUploadResponse) Reset()                    { *m = FileUploadResponse{} }
func (m *FileUploadResponse) String() string            { return proto.CompactTextString(m) }
func (*FileUploadResponse) ProtoMessage()               {}
func (*FileUploadResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *FileUploadResponse) GetStatus() bool {
	if m != nil {
		return m.Status
	}
	return false
}

func (m *FileUploadResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *FileUploadResponse) GetFile() string {
	if m != nil {
		return m.File
	}
	return ""
}

func init() {
	proto.RegisterType((*FileUploadRequest)(nil), "protos.FileUploadRequest")
	proto.RegisterType((*FileUploadResponse)(nil), "protos.FileUploadResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for FileUpload service

type FileUploadClient interface {
	DoFileUpload(ctx context.Context, in *FileUploadRequest, opts ...grpc.CallOption) (*FileUploadResponse, error)
}

type fileUploadClient struct {
	cc *grpc.ClientConn
}

func NewFileUploadClient(cc *grpc.ClientConn) FileUploadClient {
	return &fileUploadClient{cc}
}

func (c *fileUploadClient) DoFileUpload(ctx context.Context, in *FileUploadRequest, opts ...grpc.CallOption) (*FileUploadResponse, error) {
	out := new(FileUploadResponse)
	err := grpc.Invoke(ctx, "/protos.FileUpload/DoFileUpload", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for FileUpload service

type FileUploadServer interface {
	DoFileUpload(context.Context, *FileUploadRequest) (*FileUploadResponse, error)
}

func RegisterFileUploadServer(s *grpc.Server, srv FileUploadServer) {
	s.RegisterService(&_FileUpload_serviceDesc, srv)
}

func _FileUpload_DoFileUpload_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FileUploadRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileUploadServer).DoFileUpload(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.FileUpload/DoFileUpload",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileUploadServer).DoFileUpload(ctx, req.(*FileUploadRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _FileUpload_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protos.FileUpload",
	HandlerType: (*FileUploadServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DoFileUpload",
			Handler:    _FileUpload_DoFileUpload_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pbs/file.proto",
}

func init() { proto.RegisterFile("pbs/file.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 185 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xe2, 0x2b, 0x48, 0x2a, 0xd6,
	0x4f, 0xcb, 0xcc, 0x49, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x03, 0x53, 0xc5, 0x4a,
	0x8e, 0x5c, 0x82, 0x6e, 0x99, 0x39, 0xa9, 0xa1, 0x05, 0x39, 0xf9, 0x89, 0x29, 0x41, 0xa9, 0x85,
	0xa5, 0xa9, 0xc5, 0x25, 0x42, 0x42, 0x5c, 0x2c, 0x79, 0x89, 0xb9, 0xa9, 0x12, 0x8c, 0x0a, 0x8c,
	0x1a, 0x9c, 0x41, 0x60, 0xb6, 0x90, 0x04, 0x17, 0x7b, 0x72, 0x7e, 0x5e, 0x49, 0x6a, 0x5e, 0x89,
	0x04, 0x13, 0x58, 0x18, 0xc6, 0x55, 0x8a, 0xe2, 0x12, 0x42, 0x36, 0xa2, 0xb8, 0x20, 0x3f, 0xaf,
	0x38, 0x55, 0x48, 0x8c, 0x8b, 0xad, 0xb8, 0x24, 0xb1, 0xa4, 0xb4, 0x18, 0x6c, 0x0a, 0x47, 0x10,
	0x94, 0x07, 0x32, 0x27, 0x37, 0xb5, 0xb8, 0x38, 0x31, 0x3d, 0x15, 0x66, 0x0e, 0x94, 0x0b, 0xb2,
	0x15, 0xe4, 0x40, 0x09, 0x66, 0x88, 0xad, 0x20, 0xb6, 0x51, 0x28, 0x17, 0x17, 0xc2, 0x6c, 0x21,
	0x77, 0x2e, 0x1e, 0x97, 0x7c, 0x24, 0xbe, 0x24, 0xc4, 0x33, 0xc5, 0x7a, 0x18, 0x5e, 0x90, 0x92,
	0xc2, 0x26, 0x05, 0x71, 0x9a, 0x12, 0x43, 0x12, 0xc4, 0xf7, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff,
	0xff, 0xac, 0x67, 0xda, 0xef, 0x16, 0x01, 0x00, 0x00,
}
